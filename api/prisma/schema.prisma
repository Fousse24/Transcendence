// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Weather {
  id          Int     @id @default(autoincrement())
  value       String
  description String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("weather")
}

model User {
  id          Int     @id @default(autoincrement())
  username    String  @unique
  email       String  @unique
  displayName String
  firstName   String
  lastName    String
  avatarUrl   String?

  rooms UserRoom[]

  GamesAsPlayer1	Game[] @relation("gameP1")
  GamesAsPlayer2	Game[] @relation("gameP2")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt



  @@map("users")
}

model Room {
  id   Int    @id @default(autoincrement())
  name String

  users UserRoom[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("rooms")
}

model UserRoom {
  user   User @relation(fields: [userId], references: [id])
  userId Int
  room   Room @relation(fields: [roomId], references: [id])
  roomId Int

  isOwner Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([userId, roomId])
}

enum Winner {
  PLAYER1
  PLAYER2
  NONE
}

model Game {
	id					Int		@id	@default(autoincrement())
	startTime		DateTime?
	endTime			DateTime?
	timePlayed 	Int		@default(0)
	player1			User	@relation(name: "gameP1", fields: [player1Id], references: [id])
	player1Id		Int					
	player2			User	@relation(name: "gameP2", fields: [player2Id], references: [id])
	player2Id		Int					

	winner				Winner	@default(NONE)
	scorePlayer1	Int			@default(0)
	scorePlayer2	Int			@default(0)
	ballBounce		Int			@default(0)
	longestRally	Int			@default(0)
	description		String	@default("")

	CreatedAt	DateTime		@default(now())
  updatedAt	DateTime		@updatedAt
}
